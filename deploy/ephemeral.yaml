apiVersion: v1
kind: Template
metadata:
  name: xjoin-search
objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: xjoin-search
    spec:
      envName: ${ENV_NAME}
      testing:
        iqePlugin: xjoin
      dependencies:
        - host-inventory
      optionalDependencies:
        - xjoin-api-gateway
      deployments:
        - name: api
          minReplicas: ${{NUM_REPLICAS}}
          webServices:
            private:
              enabled: true
          podSpec:
            image: ${IMAGE}:${IMAGE_TAG}
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: metrics
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: metrics
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
            env:
              - name: LOG_LEVEL
                value: ${LOG_LEVEL}
              - name: LOG_PRETTY
                value: ${LOG_PRETTY}
              - name: NODE_ENV
                value: ${NODE_ENV}
              - name: ES_NODES
                value: http://xjoin-elasticsearch-es-default:9200
              - name: ES_USERNAME
                value: elastic
              - name: ES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: elastic
                    name: xjoin-elasticsearch-es-elastic-user
              - name: HOSTS_INDEX
                value: ${HOSTS_INDEX}
            resources:
              limits:
                cpu: ${CPU_LIMITS}
                memory: ${MEMORY_LIMITS}
              requests:
                cpu: ${CPU_REQUESTS}
                memory: ${MEMORY_REQUESTS}
      jobs:
        - name: heartbeat
          schedule: ${HEARTBEAT_SCHEDULE}
          suspend: ${{HEARTBEAT_SUSPEND}}
          podSpec:
            image: ${HEARTBEAT_IMAGE}:${HEARTBEAT_IMAGE_TAG}
            restartPolicy: Never
            env:
              - name: INGRESS_HOST
                value: ${INGRESS_HOST}
              - name: INGRESS_PORT
                value: ${INGRESS_PORT}
              - name: INGRESS_PROTOCOL
                value: ${INGRESS_PROTOCOL}
            resources:
              limits:
                cpu: 51m
                memory: 51Mi
              requests:
                cpu: 50m
                memory: 50Mi
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: xjoin-search
      name: xjoin-search
    spec:
      ports:
        - port: 4000
          protocol: TCP
          targetPort: private
      selector:
        pod: xjoin-search-api
  - apiVersion: elasticsearch.k8s.elastic.co/v1
    kind: Elasticsearch
    metadata:
      name: xjoin-elasticsearch
    spec:
      http:
        service:
          metadata:
            creationTimestamp: null
          spec: {}
        tls:
          selfSignedCertificate:
            disabled: true
      version: 7.10.0
      nodeSets:
        - name: default
          podTemplate:
            spec:
              containers:
                - name: elasticsearch
                  env:
                    - name: ES_JAVA_OPTS
                      value: ${ES_JAVA_OPTS}
                  resources:
                    limits:
                      cpu: ${ES_CPU_LIMITS}
                      memory: ${ES_MEMORY_LIMITS}
                    requests:
                      cpu: ${ES_CPU_REQUESTS}
                      memory: ${ES_MEMORY_REQUESTS}
          count: 1
          config:
            node.store.allow_mmap: false
  - apiVersion: xjoin.cloud.redhat.com/v1alpha1
    kind: XJoinPipeline
    metadata:
      name: xjoinpipeline
    spec:
      pause: false
      ephemeral: true
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-xjoin-operator-namespace
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: xjoin
      podSelector: {}
      policyTypes:
        - Ingress
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: xjoin
    data:
      init.validation.attempts.threshold: "30"
      init.validation.interval: "30"
      init.validation.percentage.threshold: "5"
      standard.interval: "60"
      validation.attempts.threshold: "5"
      validation.interval: "30"
      validation.percentage.threshold: "5"
      kafka.topic.replicas: "1"
      elasticsearch.connector.config: >-
        {
            "tasks.max": "{{.ElasticSearchTasksMax}}",
            "topics": "{{.Topic}}",
            "key.ignore": "false",
            "connection.url": "{{.ElasticSearchURL}}",
            {{if .ElasticSearchUsername}}"connection.username": "{{.ElasticSearchUsername}}",{{end}}
            {{if .ElasticSearchPassword}}"connection.password": "{{.ElasticSearchPassword}}",{{end}}
            "type.name": "_doc",
            "transforms": "valueToKey, extractKey, expandJSON, expandPRSJSON, deleteIf, flattenList, flattenListString, flattenPRS, renameTopic",
            "transforms.valueToKey.type":"org.apache.kafka.connect.transforms.ValueToKey",
            "transforms.valueToKey.fields":"id",
            "transforms.extractKey.type":"org.apache.kafka.connect.transforms.ExtractField$Key",
            "transforms.extractKey.field":"id",
            "transforms.expandJSON.type": "com.redhat.insights.expandjsonsmt.ExpandJSON$Value",
            "transforms.expandJSON.sourceFields": "tags",
            "transforms.expandPRSJSON.type": "com.redhat.insights.expandjsonsmt.ExpandJSON$Value",
            "transforms.expandPRSJSON.sourceFields": "per_reporter_staleness",
            "transforms.deleteIf.type": "com.redhat.insights.deleteifsmt.DeleteIf$Value",
            "transforms.deleteIf.field": "__deleted",
            "transforms.deleteIf.value": "true",
            "transforms.flattenList.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
            "transforms.flattenList.sourceField": "tags",
            "transforms.flattenList.outputField": "tags_structured",
            "transforms.flattenList.mode": "keys",
            "transforms.flattenList.keys": "namespace,key,value",
            "transforms.flattenListString.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
            "transforms.flattenListString.sourceField": "tags",
            "transforms.flattenListString.outputField": "tags_string",
            "transforms.flattenListString.mode": "join",
            "transforms.flattenListString.delimiterJoin": "/",
            "transforms.flattenListString.encode": true,
            "transforms.flattenPRS.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
            "transforms.flattenPRS.sourceField": "per_reporter_staleness",
            "transforms.flattenPRS.outputField": "per_reporter_staleness_flat",
            "transforms.flattenPRS.mode": "object",
            "transforms.flattenPRS.rootKey": "reporter",
            "transforms.renameTopic.type": "org.apache.kafka.connect.transforms.RegexRouter",
            "transforms.renameTopic.regex": "{{.Topic}}",
            "transforms.renameTopic.replacement": "{{.RenameTopicReplacement}}",
            "behavior.on.null.values":"delete",
            "behavior.on.malformed.documents": "warn",
            "auto.create.indices.at.start": false,
            "schema.ignore": true,
            "max.in.flight.requests": {{.ElasticSearchMaxInFlightRequests}},
            "errors.log.enable": {{.ElasticSearchErrorsLogEnable}},
            "errors.log.include.messages": true,
            "max.retries": {{.ElasticSearchMaxRetries}},
            "retry.backoff.ms": {{.ElasticSearchRetryBackoffMS}},
            "batch.size": {{.ElasticSearchBatchSize}},
            "max.buffered.records": {{.ElasticSearchMaxBufferedRecords}},
            "linger.ms": {{.ElasticSearchLingerMS}}
        }
      debezium.connector.config: >-
        {
          "tasks.max": "{{.DebeziumTasksMax}}",
          "database.hostname": "{{.HBIDBHost}}",
          "database.port": "{{.HBIDBPort}}",
          "database.user": "{{.HBIDBUser}}",
          "database.password": "{{.HBIDBPassword}}",
          "database.dbname": "{{.HBIDBName}}",
          "database.server.name": "{{.ResourceNamePrefix}}.{{.Version}}",
          "database.sslmode": "{{.HBIDBSSLMode}}",
          "database.sslrootcert": "{{.HBIDBSSLRootCert}}",
          "table.whitelist": "public.hosts",
          "plugin.name": "pgoutput",
          "transforms": "unwrap",
          "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
          "transforms.unwrap.delete.handling.mode": "rewrite",
          "errors.log.enable": {{.DebeziumErrorsLogEnable}},
          "errors.log.include.messages": true,
          "slot.name": "{{.ReplicationSlotName}}",
          "max.queue.size": {{.DebeziumQueueSize}},
          "max.batch.size": {{.DebeziumMaxBatchSize}},
          "poll.interval.ms": {{.DebeziumPollIntervalMS}}
        }
      elasticsearch.pipeline.template: >-
        {
            "description" : "Ingest pipeline for {{.ResourceNamePrefix}}",
            "processors" : [{
                "set": {
                    "field": "ingest_timestamp",
                    "value": "{{"{{"}}_ingest.timestamp{{"}}"}}"
                },
                "json" : {
                    "if" : "ctx.system_profile_facts != null",
                    "field" : "system_profile_facts"
                }
            }, {
                "json" : {
                    "if" : "ctx.canonical_facts != null",
                    "field" : "canonical_facts"
                }
            }, {
                "json" : {
                    "if" : "ctx.facts != null",
                    "field" : "facts"
                }
            }, {
                "json" : {
                    "if" : "ctx.groups != null",
                    "field" : "groups"
                }
            }, {
                "script": {
                    "lang": "painless",
                    "if": "ctx.tags_structured != null",
                    "source": "ctx.tags_search = ctx.tags_structured.stream().map(t -> { StringBuilder builder = new StringBuilder(); if (t.namespace != null && t.namespace != 'null') { builder.append(t.namespace); } builder.append('/'); builder.append(t.key); builder.append('='); if (t.value != null) { builder.append(t.value); } return builder.toString() }).collect(Collectors.toList()); ctx.tags_search_combined = ctx.tags_search.stream().map(t -> {return t + 'c6509b6d-9646-4122-a16c-f536660c22ee' + t.toLowerCase()}).collect(Collectors.toList());"
                }
            }]
        }
      elasticsearch.index.template: |-
        {
          "settings": {
            "index": {
              "number_of_shards": "{{.ElasticSearchIndexShards}}",
              "number_of_replicas": "{{.ElasticSearchIndexReplicas}}",
              "default_pipeline": "{{.ElasticSearchPipeline}}",
              "max_result_window": 50000
            },
            "analysis": {
              "normalizer": {
                "case_insensitive": {
                  "filter": "lowercase"
                }
              }
            }
          },
          "mappings": {
            "dynamic": false,
            "properties": {
              "ingest_timestamp": {
                "type": "date"
              },
              "id": {
                "type": "keyword"
              },
              "account": {
                "type": "keyword"
              },
              "org_id": {
                "type": "keyword"
              },
              "display_name": {
                "type": "keyword",
                "fields": {
                  "lowercase": {
                    "type": "keyword",
                    "normalizer": "case_insensitive"
                  }
                }
              },
              "created_on": {
                "type": "date_nanos"
              },
              "modified_on": {
                "type": "date_nanos"
              },
              "stale_timestamp": {
                "type": "date_nanos"
              },
              "ansible_host": {
                "type": "keyword"
              },
              "canonical_facts": {
                "type": "object",
                "properties": {
                  "fqdn": {
                    "type": "keyword",
                    "fields": {
                      "lowercase": {
                        "type": "keyword",
                        "normalizer": "case_insensitive"
                      }
                    }
                  },
                  "insights_id": {
                    "type": "keyword"
                  },
                  "satellite_id": {
                    "type": "keyword"
                  },
                  "provider_type": {
                    "type": "keyword"
                  },
                  "provider_id": {
                    "type": "keyword"
                  }
                }
              },
              "groups": {
                "type": "nested",
                "properties": {
                  "id": {
                    "type": "keyword"
                  },
                  "name": {
                    "type": "keyword",
                    "fields": {
                      "lowercase": {
                        "type": "keyword",
                        "normalizer": "case_insensitive"
                      }
                    }
                  },
                  "account": {
                    "type": "keyword"
                  },
                  "org_id": {
                    "type": "keyword"
                  },
                  "created": {
                    "type": "date_nanos"
                  },
                  "updated": {
                    "type": "date_nanos"
                  }
                }
              },
              "system_profile_facts": {
                "properties": {
                  "owner_id": {
                    "type": "keyword"
                  },
                  "rhc_client_id": {
                    "type": "keyword"
                  },
                  "rhc_config_state": {
                    "type": "keyword"
                  },
                  "cpu_model": {
                    "type": "keyword"
                  },
                  "number_of_cpus": {
                    "type": "integer"
                  },
                  "number_of_sockets": {
                    "type": "integer"
                  },
                  "cores_per_socket": {
                    "type": "integer"
                  },
                  "threads_per_core": {
                    "type": "integer"
                  },
                  "system_memory_bytes": {
                    "type": "long"
                  },
                  "infrastructure_type": {
                    "type": "keyword"
                  },
                  "infrastructure_vendor": {
                    "type": "keyword"
                  },
                  "network_interfaces": {
                    "type": "object",
                    "properties": {
                      "ipv4_addresses": {
                        "type": "keyword"
                      },
                      "ipv6_addresses": {
                        "type": "keyword"
                      },
                      "mtu": {
                        "type": "integer"
                      },
                      "mac_address": {
                        "type": "keyword"
                      },
                      "name": {
                        "type": "keyword"
                      },
                      "state": {
                        "type": "keyword"
                      },
                      "type": {
                        "type": "keyword"
                      }
                    }
                  },
                  "disk_devices": {
                    "type": "object",
                    "properties": {
                      "device": {
                        "type": "keyword"
                      },
                      "label": {
                        "type": "text"
                      },
                      "mount_point": {
                        "type": "keyword"
                      },
                      "type": {
                        "type": "keyword"
                      }
                    }
                  },
                  "bios_vendor": {
                    "type": "keyword"
                  },
                  "bios_version": {
                    "type": "keyword"
                  },
                  "cpu_flags": {
                    "type": "keyword"
                  },
                  "systemd": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "type": "keyword"
                      },
                      "jobs_queued": {
                        "type": "integer"
                      },
                      "failed": {
                        "type": "integer"
                      },
                      "failed_services": {
                        "type": "keyword"
                      }
                    }
                  },
                  "operating_system": {
                    "type": "object",
                    "properties": {
                      "major": {
                        "type": "integer"
                      },
                      "minor": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "keyword"
                      }
                    }
                  },
                  "os_release": {
                    "type": "keyword"
                  },
                  "os_kernel_version": {
                    "type": "keyword"
                  },
                  "releasever": {
                    "type": "keyword"
                  },
                  "arch": {
                    "type": "keyword"
                  },
                  "basearch": {
                    "type": "keyword"
                  },
                  "kernel_modules": {
                    "type": "keyword"
                  },
                  "last_boot_time": {
                    "type": "keyword"
                  },
                  "subscription_status": {
                    "type": "keyword"
                  },
                  "subscription_auto_attach": {
                    "type": "keyword"
                  },
                  "katello_agent_running": {
                    "type": "boolean"
                  },
                  "satellite_managed": {
                    "type": "boolean"
                  },
                  "cloud_provider": {
                    "type": "keyword"
                  },
                  "dnf_modules": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "keyword"
                      },
                      "stream": {
                        "type": "keyword"
                      }
                    }
                  },
                  "installed_products": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "keyword"
                      },
                      "id": {
                        "type": "keyword"
                      },
                      "status": {
                        "type": "keyword"
                      }
                    }
                  },
                  "insights_client_version": {
                    "type": "keyword"
                  },
                  "insights_egg_version": {
                    "type": "keyword"
                  },
                  "captured_date": {
                    "type": "keyword"
                  },
                  "installed_packages": {
                    "type": "keyword"
                  },
                  "gpg_pubkeys": {
                    "type": "keyword"
                  },
                  "installed_services": {
                    "type": "keyword"
                  },
                  "enabled_services": {
                    "type": "keyword"
                  },
                  "sap": {
                    "type": "object",
                    "properties": {
                      "sap_system": {
                        "type": "boolean"
                      },
                      "sids": {
                        "type": "keyword"
                      },
                      "instance_number": {
                        "type": "keyword"
                      },
                      "version": {
                        "type": "keyword"
                      }
                    }
                  },
                  "sap_system": {
                    "type": "boolean"
                  },
                  "sap_sids": {
                    "type": "keyword"
                  },
                  "sap_instance_number": {
                    "type": "keyword"
                  },
                  "sap_version": {
                    "type": "keyword"
                  },
                  "tuned_profile": {
                    "type": "keyword"
                  },
                  "selinux_current_mode": {
                    "type": "keyword"
                  },
                  "selinux_config_file": {
                    "type": "keyword"
                  },
                  "is_marketplace": {
                    "type": "boolean"
                  },
                  "host_type": {
                    "type": "keyword"
                  },
                  "greenboot_status": {
                    "type": "keyword"
                  },
                  "greenboot_fallback_detected": {
                    "type": "boolean"
                  },
                  "rpm_ostree_deployments": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "keyword"
                      },
                      "checksum": {
                        "type": "keyword"
                      },
                      "origin": {
                        "type": "keyword"
                      },
                      "osname": {
                        "type": "keyword"
                      },
                      "version": {
                        "type": "keyword"
                      },
                      "booted": {
                        "type": "boolean"
                      },
                      "pinned": {
                        "type": "boolean"
                      }
                    }
                  },
                  "rhsm": {
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "keyword"
                      }
                    }
                  },
                  "system_purpose": {
                    "type": "object",
                    "properties": {
                      "usage": {
                        "type": "keyword"
                      },
                      "role": {
                        "type": "keyword"
                      },
                      "sla": {
                        "type": "keyword"
                      }
                    }
                  },
                  "ansible": {
                    "type": "object",
                    "properties": {
                      "controller_version": {
                        "type": "keyword"
                      },
                      "hub_version": {
                        "type": "keyword"
                      },
                      "catalog_worker_version": {
                        "type": "keyword"
                      },
                      "sso_version": {
                        "type": "keyword"
                      }
                    }
                  },
                  "mssql": {
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "keyword"
                      }
                    }
                  },
                  "system_update_method": {
                    "type": "keyword"
                  },
                  "virtual_host_uuid": {
                    "type": "keyword"
                  }
                }
              },
              "tags_structured": {
                "type": "nested",
                "properties": {
                  "namespace": {
                    "type": "keyword",
                    "null_value": "$$_XJOIN_SEARCH_NULL_VALUE"
                  },
                  "key": {
                    "type": "keyword"
                  },
                  "value": {
                    "type": "keyword",
                    "null_value": "$$_XJOIN_SEARCH_NULL_VALUE"
                  }
                }
              },
              "per_reporter_staleness_flat": {
                "type": "nested",
                "properties": {
                  "reporter": {
                    "type": "keyword"
                  },
                  "last_check_in": {
                    "type": "keyword"
                  },
                  "stale_timestamp": {
                    "type": "keyword"
                  },
                  "check_in_succeeded": {
                    "type": "boolean"
                  }
                }
              },
              "tags_string": {
                "type": "keyword"
              },
              "tags_search_combined": {
                "type": "keyword"
              },
              "tags_search": {
                "type": "keyword",
                "fields": {
                  "lowercase": {
                    "type": "keyword",
                    "normalizer": "case_insensitive"
                  }
                }
              }
            }
          }
        }
parameters:
  - name: LOG_LEVEL
    value: debug
  - name: LOG_PRETTY
    value: "false"
  - description: Can be "production", "development", "test"
    name: NODE_ENV
    value: production
  - name: HOSTS_INDEX
    value: xjoin.inventory.hosts
  - name: CPU_REQUESTS
    value: 100m
  - name: CPU_LIMITS
    value: 200m
  - name: MEMORY_REQUESTS
    value: 256Mi
  - name: MEMORY_LIMITS
    value: 512Mi
  - name: ES_CPU_REQUESTS
    value: 250m
  - name: ES_CPU_LIMITS
    value: "1"
  - name: ES_MEMORY_REQUESTS
    value: 1Gi
  - name: ES_MEMORY_LIMITS
    value: 2Gi
  - name: ES_JAVA_OPTS
    value: -Xms500m -Xmx500m
  - name: NUM_REPLICAS
    value: "1"
  - name: ES_USERNAME
    value: ""
  - name: ES_PASSWORD
    value: ""
  - name: INGRESS_HOST
    value: ingress-service
  - name: INGRESS_PORT
    value: "8000"
  - name: INGRESS_PROTOCOL
    value: http
  - name: HEARTBEAT_IMAGE
    value: quay.io/cloudservices/inventory-heartbeat
  - name: HEARTBEAT_IMAGE_TAG
    value: latest
  - name: HEARTBEAT_SUSPEND
    value: "true"
  - name: HEARTBEAT_SCHEDULE
    value: "@hourly"
  - name: IMAGE_TAG
    required: true
  - name: IMAGE
    value: quay.io/cloudservices/xjoin-search
  - description: ClowdEnvironment name
    name: ENV_NAME
    required: true
